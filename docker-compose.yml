version: "3.9"   
services:

  server:
    container_name: server_container
    image: server:latest
    build: server/
    ports:
      - "8000:8000"
    expose:
      - 8000
    depends_on:
      - db
  
  # if you want to interactive with CLI client then run the client image mannually with no docker compose:
  # docker build -t client_image .
  # docker run -it client_image
  
  # client:
  #   container_name: client_container
  #   image: client:latest
  #   build: client/
  #   depends_on:
  #     - server
  #   ports:
  #     - "5555:5555"
  #   tty: true # docker run -t
  #   stdin_open: true # docker run -i
  #   network_mode: host # define that the container can access to the 'localhost' of the computer
  #   command: ["python", "./main.py", "-it"]      
  
  # client2:
  #   image: client:latest
  #   build: client/
  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - ./nginx_config.conf:/etc/nginx/conf.d/default.conf
  #   depends_on:
  #     - server
  #     - client
   
  db:
    container_name: postgres_container
    image: postgres:15-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    expose:
      - 5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres_db
      - POSTGRES_SERVER=db
    env_file:
      - ./.env
    healthcheck:
       test: ["CMD-SHELL", "pg_isready -U postgres"]
       interval: 5s
       timeout: 5s
       retries: 5
  
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: adi.epshtain@gmail.com
      PGADMIN_DEFAULT_PASSWORD: postgres  
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    
volumes:
  postgres_data:
  pgadmin-data: